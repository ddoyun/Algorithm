// 문제
// 문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다.
// 예를 들어 strings가 ["sun", "bed", "car"]이고 n이 1이면 각 단어의 인덱스 1의 문자 "u", "e", "a"로 strings를 정렬합니다.

// 제한 조건
// strings는 길이 1 이상, 50이하인 배열입니다.
// strings의 원소는 소문자 알파벳으로 이루어져 있습니다.
// strings의 원소는 길이 1 이상, 100이하인 문자열입니다.
// 모든 strings의 원소의 길이는 n보다 큽니다.
// 인덱스 1의 문자가 같은 문자열이 여럿 일 경우, 사전순으로 앞선 문자열이 앞쪽에 위치합니다.

function solution(strings, n) {
    strings.sort((i, j) => {
        let fir = i[n];
        let sec = j[n];
        if (fir === sec) {
            return (i > j) - (i < j);
        } else {
            return (fir > sec) - (fir < sec);
        }
    });
    return strings;
}

// 정수 n이 주어지면 각각 문자열의 i번째 문자를 비교해서 정렬해야 하기 때문에
// i번째 문자가 같을 경우 그 다음번째 문자를 비교해서 정렬한다.
// sort() 메소드를 이용하여 배열 안의 인접한 요소를 비교한다.
// 첫 인수는 인접한 왼쪽 요소이며, 두 번째 인수는 인접한 오른쪽 요소이다.

// (i, j) < 0 이면 i를 j보다 작은 인덱스로 정렬한다.
// (i, j) == 0 이면 j와 j의 순서를 바꾸지 않는다.
// (i, j) > 0 이면 i를 j보다 작은 인덱스로 정렬한다.
// n번째 문자가 같을 경우는 매개변수로 받은 i, j 문자열 전체를 비교한다.
